#lang rhombus/static/and_meta
import:
  esterel/kernel open
  lib("esterel/private/full.rkt"):
    expose #{loop-each/proc}
    expose #{loop/proc}
    expose #{await/proc}
    expose #{await-n/proc}
    expose #{await-immediate/proc}
    expose #{every/proc}
    expose #{every-n/proc}
    expose #{every-immediate/proc}
    expose #{abort-when/proc}
    expose #{weak-abort/proc}
    expose #{weak-abort-immediate/proc}
    expose halt as full_halt
    expose sustain as full_sustain

export:
  all_from(esterel/kernel)
  loop
  await
  every
  sustain
  def_strl
  halt
  abort

defn.macro 'def_strl $id: $body':
    'def $id: esterel: $body'

fun
| sustain(s): full_sustain(s)
| sustain(s, v): full_sustain(s, v)
  
expr.macro
| 'loop:
     $body
     ...
     ~each $restart':
    '#{loop-each/proc}(fun ():
                         $body
                         ...,
                       fun (): $restart)'
| 'loop:
     $body':
    '#{loop/proc}(fun (): $body)'

expr.macro
| 'await $when ... ~n $n ...':
    ~stronger_than |||
    '#{await-n/proc}(fun (): $when ..., $n ...)'
| 'await ~immediate $when ...':
    '#{await-immediate/proc}(fun (): $when ...)'
| 'await $when ...':
    '#{await/proc}(fun (): $when ...)'

expr.macro
| 'every ~immediate $s ...:
     $body':
    '#{every-immediate/proc}(fun (): $s ..., 
                             fun (): $body)'
| 'every $s ... ~n $n ...:
     $body':
    '#{every-n/proc}(fun (): $s ...,
                     $n ...,
                     fun (): $body)'
| 'every $s ...:
     $body':
    '#{every/proc}(fun (): $s ...,
                   fun (): $body)'

fun halt():
  full_halt()

expr.macro
| 'abort:
     $body_expr ...
     ~when $when_expr ...':
   '#{abort-when/proc}(fun (): $body_expr ..., fun (): $when_expr ...)'
| 'abort ~weak:
     $body_expr ...
     ~when $when_expr ...':
   '#{weak-abort/proc}(fun (): $body_expr ..., fun (): $when_expr ...)'
| 'abort ~weak:
     $body_expr ...
     ~when_immediate $when_expr ...':
   '#{weak-abort-immediate/proc}(fun (): $body_expr ..., fun (): $when_expr ...)'
